[{"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\BackgroundHeart.js":"4","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Love.js":"5","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Question.js":"6","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Memories.js":"7","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\icon.js":"8","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\LetterAndQuote.js":"9","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\YesButton.js":"10","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ShowDays.js":"11","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\NoButton.js":"12","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Avatar.js":"13","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ShowFull.js":"14","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\utils\\API.js":"15","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\MemoriesButton.js":"16","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\SubmitButton.js":"17","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ModalZoom.js":"18","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ModalAdd.js":"19","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Book.js":"20"},{"size":543,"mtime":1609939159091,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608950816529,"results":"23","hashOfConfig":"22"},{"size":5369,"mtime":1614428699705,"results":"24","hashOfConfig":"22"},{"size":1471,"mtime":1609795148999,"results":"25","hashOfConfig":"22"},{"size":2873,"mtime":1611491272088,"results":"26","hashOfConfig":"22"},{"size":3305,"mtime":1614429593457,"results":"27","hashOfConfig":"22"},{"size":7899,"mtime":1612525849759,"results":"28","hashOfConfig":"22"},{"size":5414,"mtime":1609223325009,"results":"29","hashOfConfig":"22"},{"size":5380,"mtime":1612542916764,"results":"30","hashOfConfig":"22"},{"size":556,"mtime":1614428635527,"results":"31","hashOfConfig":"22"},{"size":7176,"mtime":1611684106828,"results":"32","hashOfConfig":"22"},{"size":885,"mtime":1609469018209,"results":"33","hashOfConfig":"22"},{"size":12143,"mtime":1611684123970,"results":"34","hashOfConfig":"22"},{"size":13593,"mtime":1611491851727,"results":"35","hashOfConfig":"22"},{"size":1271,"mtime":1612274958000,"results":"36","hashOfConfig":"22"},{"size":4154,"mtime":1611933193421,"results":"37","hashOfConfig":"22"},{"size":684,"mtime":1611687037933,"results":"38","hashOfConfig":"22"},{"size":1629,"mtime":1611962966284,"results":"39","hashOfConfig":"22"},{"size":6788,"mtime":1612416222291,"results":"40","hashOfConfig":"22"},{"size":4567,"mtime":1612524834455,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1f1nuos",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\index.js",[],["87","88"],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\BackgroundHeart.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Love.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Question.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Memories.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\icon.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\LetterAndQuote.js",["89"],"import React from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport \"./LetterAndQuote.css\";\r\nimport API from \"../utils/API\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport \"react-custom-scroll/dist/customScroll.css\";\r\nimport Book from \"./Book\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nclass LetterAndQuote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      date: \"\",\r\n      content: \"\",\r\n      onAdd: false,\r\n      totalPage: 0,\r\n      BackgroundUrl: \"\",\r\n      Quote: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    API.getLetter().then((res) => {\r\n      let data = res.data.info[0];\r\n      this.setState({\r\n        BackgroundUrl: data.BackgroundUrl,\r\n        Quote: data.Quote,\r\n      });\r\n    });\r\n  }\r\n\r\n  onClickAddButton() {\r\n    this.setState({ onAdd: true });\r\n  }\r\n\r\n  onClickOk() {\r\n    //API\r\n    if (this.state.title && this.state.date && this.state.content) {\r\n      let temp = {\r\n        imageUrl: \"\",\r\n        title: this.state.title,\r\n        date: this.state.date,\r\n        content: this.state.content,\r\n      };\r\n\r\n      let data = {\r\n        TotalPage: this.state.totalPage + 1,\r\n        Letter: temp,\r\n      };\r\n\r\n      API.updateLetter(data).then(() => {\r\n        this.setState({\r\n          onAdd: false,\r\n          title: \"\",\r\n          date: \"\",\r\n          content: \"\",\r\n          totalPage: data.TotalPage,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickCancel() {\r\n    this.setState({\r\n      onAdd: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const temp = this.state.Quote.map((item, i) => {\r\n      return <Carousel.Item key={i}>{item}</Carousel.Item>;\r\n    });\r\n    return (\r\n      <div className=\"cover-tag\">\r\n        <img\r\n          src={this.state.BackgroundUrl}\r\n          style={{\r\n            position: \"absolute\",\r\n            filter: \"blur(10px)\",\r\n          }}\r\n        ></img>\r\n        <div>\r\n          <div className=\"AllLetter\">\r\n            <div className=\"TopLetter\">\r\n              {this.state.onAdd ? (\r\n                <div className=\"page-number\">\r\n                  {this.state.totalPage}/{this.state.totalPage + 1} pages\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.state.onAdd === false ? (\r\n              <Book\r\n                data={(totalPage) =>\r\n                  this.setState({\r\n                    totalPage: totalPage,\r\n                  })\r\n                }\r\n                onClickAddButton={() => this.onClickAddButton()}\r\n              ></Book>\r\n            ) : null}\r\n            {this.state.onAdd === true ? (\r\n              <>\r\n                <ButtonGroup className=\"confirmGButton\" size=\"sm\">\r\n                  <Button\r\n                    onClick={() => this.onClickOk()}\r\n                    title=\"Ok\"\r\n                    variant=\"success\"\r\n                    style={{ width: \"40px\" }}\r\n                  >\r\n                    OK\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => this.onClickCancel()}\r\n                    title=\"Cancel\"\r\n                    variant=\"warning\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </ButtonGroup>\r\n                <div className=\"cover-letter\">\r\n                  <div\r\n                    className=\"editLetter\"\r\n                    style={{ width: \"315px\", height: \"461.79px\" }}\r\n                  >\r\n                    <TextareaAutosize\r\n                      minRows={1}\r\n                      maxRows={1}\r\n                      className=\"editTitle\"\r\n                      value={this.state.title}\r\n                      onChange={(event) =>\r\n                        this.setState({ title: event.target.value })\r\n                      }\r\n                      placeholder=\"title\"\r\n                    ></TextareaAutosize>\r\n                    <TextareaAutosize\r\n                      minRows={1}\r\n                      maxRows={1}\r\n                      className=\"editDate\"\r\n                      value={this.state.date}\r\n                      onChange={(event) =>\r\n                        this.setState({ date: event.target.value })\r\n                      }\r\n                      placeholder=\"date\"\r\n                    ></TextareaAutosize>\r\n                    <TextareaAutosize\r\n                      minRows={1}\r\n                      maxRows={15}\r\n                      className=\"editContent\"\r\n                      value={this.state.content}\r\n                      onChange={(event) =>\r\n                        this.setState({ content: event.target.value })\r\n                      }\r\n                      placeholder=\"content\"\r\n                    ></TextareaAutosize>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          {this.state.Quote.length !== 0 ? (\r\n            <div className=\"Quote\">\r\n              <Carousel\r\n                defaultActiveIndex={Math.floor(\r\n                  Math.random() * Math.floor(this.state.Quote.length)\r\n                )}\r\n                interval={10000}\r\n              >\r\n                {temp}\r\n              </Carousel>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LetterAndQuote;\r\n","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\YesButton.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ShowDays.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\NoButton.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Avatar.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ShowFull.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\utils\\API.js",["90"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  async getShowDays() {\r\n    return await axios.get(\"/api/getShowDays\");\r\n  },\r\n  async getShowFull() {\r\n    return await axios.get(\"/api/getShowFull\");\r\n  },\r\n  async getAvatar() {\r\n    return await axios.get(\"/api/getAvatar\");\r\n  },\r\n  async getAllImage() {\r\n    return await axios.get(\"/api/getAllImage\");\r\n  },\r\n  async getImage(value) {\r\n    return await axios.get(\"/api/getImage\", value);\r\n  },\r\n  async getLetter() {\r\n    return await axios.get(\"/api/getLetter\");\r\n  },\r\n  async insertImage(value) {\r\n    return await axios.post(\"/api/insertImage\", value);\r\n  },\r\n  async updateImage(id, value) {\r\n    return await axios.put(`/api/updateImage/${id}`, value);\r\n  },\r\n  async updateLetter(change) {\r\n    return await axios.post(`/api/updateLetter`, change);\r\n  },\r\n  async postShowDays(change) {\r\n    return await axios.post(`/api/updateShowDays`, change);\r\n  },\r\n  async postShowFull(change) {\r\n    return await axios.post(`/api/updateShowFull`, change);\r\n  },\r\n  async postAvatar(change) {\r\n    return await axios.post(`/api/updateAvatar`, change);\r\n  },\r\n  async postImage(formData) {\r\n    return await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/dnjb58me8/image/upload\",\r\n      formData\r\n    );\r\n  },\r\n};\r\n","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\MemoriesButton.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\SubmitButton.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ModalZoom.js",["91"],"import React, { useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Rodal from \"rodal\";\r\nimport \"rodal/lib/rodal.css\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport \"./ModalZoom.css\";\r\nconst ModalAdd = (props) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [images, setImages] = useState(\r\n    props.images.map((item) => {\r\n      return { original: item.ImageUrl, thumbnail: item.ImageUrl };\r\n    })\r\n  );\r\n  const [slide, setSlide] = useState(0);\r\n\r\n  const clickCancelZoom = () => {\r\n    setVisible(false);\r\n    props.clickCancelZoom();\r\n  };\r\n\r\n  const myRef = useRef();\r\n\r\n  const onBeforeSlide = (x) => {\r\n    setSlide(x);\r\n  };\r\n\r\n  const renderCustomControls = () => {\r\n    return (\r\n      <img\r\n        src={images[slide].original}\r\n        alt=\"bg\"\r\n        style={{\r\n          width: \"100%\",\r\n          opacity: 0.7,\r\n          filter: \"blur(15px)\",\r\n          height: \"100vh\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  const haveTarget = document.getElementById(\"App\");\r\n\r\n  return ReactDOM.createPortal(\r\n    <Rodal\r\n      className=\"rodal-dialog-zoom\"\r\n      visible={visible}\r\n      onClose={clickCancelZoom}\r\n      animation=\"zoom\"\r\n      closeOnEsc={true}\r\n      closeMaskOnClick={false}\r\n    >\r\n      <ImageGallery\r\n        ref={myRef}\r\n        items={images}\r\n        onBeforeSlide={onBeforeSlide}\r\n        renderCustomControls={renderCustomControls}\r\n      />\r\n    </Rodal>,\r\n    haveTarget\r\n  );\r\n};\r\n\r\nexport default ModalAdd;\r\n","C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\ModalAdd.js",[],"C:\\Users\\DELL\\Desktop\\react-1\\LoveApp\\client\\src\\Components\\Book.js",["92"],"import React from \"react\";\r\nimport HTMLFlipBook from \"react-pageflip\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport CustomScroll from \"react-custom-scroll\";\r\nimport \"react-custom-scroll/dist/customScroll.css\";\r\nimport API from \"../utils/API\";\r\nimport Add from \"../image/icon/add-letter.png\";\r\n\r\nconst PageCover = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className=\"page page-cover\" ref={ref} data-density=\"hard\">\r\n      <div className=\"page-content\">\r\n        <img\r\n          src={props.bg}\r\n          style={{\r\n            position: \"absolute\",\r\n            objectFit: \"cover\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            boxShadow:\r\n              \"inset 0 0 30px 0 rgb(36 10 3 / 50%), -2px 0 5px 2px rgb(0 0 0 / 40%)\",\r\n            border: \"1px solid #998466\",\r\n          }}\r\n        ></img>\r\n        <h2 style={{ zIndex: 0, marginTop: \"40px\" }}>{props.children}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Page = React.forwardRef((props, ref) => {\r\n  let res = props.data.map((letter, index) => {\r\n    return (\r\n      <div className=\"demoPage\" ref={ref} key={index}>\r\n        <h3 className=\"page-header\" style={{ marginBottom: \"5px\" }}>\r\n          {letter.title}\r\n        </h3>\r\n        <p className=\"page-date\">{letter.date}</p>\r\n        <CustomScroll>\r\n          <div className=\"page-text\">{letter.content}</div>\r\n        </CustomScroll>\r\n\r\n        <p className=\"page-footer\">{index + 2}</p>\r\n      </div>\r\n    );\r\n  });\r\n  return res;\r\n});\r\n\r\nclass Book extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 0,\r\n      totalPage: 0,\r\n      FrontUrl: \"\",\r\n      BackUrl: \"\",\r\n      Letter: [],\r\n      onAdd: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    API.getLetter().then((res) => {\r\n      let data = res.data.info[0];\r\n      this.props.data(data.TotalPage);\r\n\r\n      this.setState({\r\n        FrontUrl: data.FrontUrl,\r\n        BackUrl: data.BackUrl,\r\n        totalPage: data.TotalPage,\r\n        Letter: data.Letter,\r\n      });\r\n    });\r\n  }\r\n  nextButtonClick = () => {\r\n    this.flipBook.getPageFlip().flipNext();\r\n  };\r\n\r\n  prevButtonClick = () => {\r\n    this.flipBook.getPageFlip().flipPrev();\r\n  };\r\n\r\n  onPage = (e) => {\r\n    this.setState({\r\n      page: e.data,\r\n    });\r\n  };\r\n  onClickAddButton = () => {\r\n    this.props.onClickAddButton();\r\n    this.setState({ onAdd: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.BackUrl ? (\r\n          <>\r\n            <div className=\"page-flip\">\r\n              <Button\r\n                variant=\"info\"\r\n                style={{ marginTop: \"4px\", marginRight: \"7px\" }}\r\n                size=\"sm\"\r\n                onClick={() => this.prevButtonClick()}\r\n              >\r\n                previous page\r\n              </Button>\r\n              <Button\r\n                variant=\"info\"\r\n                style={{ marginTop: \"4px\", marginLeft: \"7px\" }}\r\n                size=\"sm\"\r\n                onClick={() => this.nextButtonClick()}\r\n              >\r\n                next page\r\n              </Button>\r\n            </div>\r\n            <ButtonGroup className=\"groudButton\" size=\"sm\">\r\n              <Button\r\n                onClick={() => this.onClickAddButton()}\r\n                title=\"add image\"\r\n                style={{ background: \"none\" }}\r\n              >\r\n                <img src={Add} style={{ width: \"20px\" }} alt=\"1\"></img>\r\n              </Button>\r\n            </ButtonGroup>\r\n            <div className=\"page-number\">\r\n              {this.state.page + 1}/{this.state.totalPage} pages\r\n            </div>\r\n\r\n            <div className=\"cover-letter\">\r\n              <HTMLFlipBook\r\n                width={500}\r\n                height={733}\r\n                size=\"stretch\"\r\n                drawShadow={true}\r\n                minWidth={315}\r\n                maxWidth={1000}\r\n                minHeight={400}\r\n                maxHeight={1533}\r\n                maxShadowOpacity={1}\r\n                ref={(el) => (this.flipBook = el)}\r\n                onFlip={this.onPage}\r\n              >\r\n                <PageCover bg={this.state.FrontUrl}>Love Letter Book</PageCover>\r\n\r\n                <Page data={this.state.Letter}></Page>\r\n                <PageCover bg={this.state.BackUrl}>\r\n                  Em không thoát được đâu em iu. Tu bi con ti niu\r\n                </PageCover>\r\n              </HTMLFlipBook>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Book;\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":78,"column":9,"nodeType":"99","endLine":84,"endColumn":10},{"ruleId":"100","severity":1,"message":"101","line":3,"column":1,"nodeType":"102","endLine":46,"endColumn":3},{"ruleId":"103","severity":1,"message":"104","line":10,"column":18,"nodeType":"105","messageId":"106","endLine":10,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":14,"column":9,"nodeType":"99","endLine":25,"endColumn":10},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'setImages' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]