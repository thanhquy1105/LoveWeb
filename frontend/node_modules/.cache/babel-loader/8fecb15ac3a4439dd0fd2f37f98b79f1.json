{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react-1\\\\LoveApp\\\\loveapp\\\\src\\\\Components\\\\Love.js\";\nimport React from 'react';\nimport ShowDays from './ShowDays';\nimport Moment from 'moment';\nconst meet = Moment(\"02/06/2019\", \"MM/DD/YYYY\");\nconsole.log(meet);\nconst time1 = Moment();\nconsole.log(time1);\nvar total_days = time1.getTime() - meet.getTime();\nconsole.log(Math.floor(total_days / (1000 * 3600 * 24)) + 1);\nvar second = Math.floor(total_days / 1000);\nconsole.log(second);\nvar minute = Math.floor(second / 60);\nconsole.log(minute);\n\nclass Love extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString(),\n      total_days: 0,\n      years: 0,\n      months: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      second: 0\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ShowDays, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Love;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/react-1/LoveApp/loveapp/src/Components/Love.js"],"names":["React","ShowDays","Moment","meet","console","log","time1","total_days","getTime","Math","floor","second","minute","Love","Component","constructor","props","state","time","Date","toLocaleString","years","months","days","hours","minutes","componentDidMount","intervalID","setInterval","tick","componentWillUnmount","clearInterval","setState","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAAC,YAAD,EAAc,YAAd,CAAnB;AACAE,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAMG,KAAK,GAAIJ,MAAM,EAArB;AACAE,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,IAAIC,UAAU,GAAGD,KAAK,CAACE,OAAN,KAAkBL,IAAI,CAACK,OAAL,EAAnC;AACAJ,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAE,OAAO,IAAP,GAAc,EAAhB,CAArB,IAA0C,CAAtD;AAEA,IAAII,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAC,IAAtB,CAAb;AACAH,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,IAAIC,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWC,MAAM,GAAC,EAAlB,CAAb;AACAP,OAAO,CAACC,GAAR,CAAYO,MAAZ;;AACA,MAAMC,IAAN,SAAmBb,KAAK,CAACc,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EADK;AAEXb,MAAAA,UAAU,EAAE,CAFD;AAGXc,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,MAAM,EAAE,CAJG;AAKXC,MAAAA,IAAI,EAAC,CALM;AAMXC,MAAAA,KAAK,EAAE,CANI;AAOXC,MAAAA,OAAO,EAAE,CAPE;AAQXd,MAAAA,MAAM,EAAE;AARG,KAAb;AAUD;;AAEDe,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAC3B,MAAM,KAAKC,IAAL,EADqB,EAE3B,IAF2B,CAA7B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKG,QAAL,CAAc;AACZd,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADM,KAAd;AAGD;;AACCa,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AArC6B;;AAwClC,eAAepB,IAAf","sourcesContent":["import React from 'react'\r\nimport ShowDays from './ShowDays'\r\nimport Moment from 'moment'\r\n\r\nconst meet = Moment(\"02/06/2019\",\"MM/DD/YYYY\")\r\nconsole.log(meet)\r\nconst time1 =  Moment();\r\nconsole.log(time1)\r\nvar total_days= (time1.getTime() - meet.getTime());\r\nconsole.log(Math.floor(total_days/(1000 * 3600 * 24))+1);\r\n\r\nvar second = Math.floor(total_days/1000)\r\nconsole.log(second)\r\nvar minute = Math.floor(second/60)\r\nconsole.log(minute)\r\nclass Love extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: new Date().toLocaleString(),\r\n      total_days: 0,\r\n      years: 0,\r\n      months: 0,\r\n      days:0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      second: 0,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.intervalID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: new Date().toLocaleString()\r\n    });\r\n  }\r\n    render(){\r\n        return(\r\n            <>\r\n                <ShowDays></ShowDays>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Love;"]},"metadata":{},"sourceType":"module"}