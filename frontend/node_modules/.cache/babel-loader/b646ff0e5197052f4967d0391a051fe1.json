{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react-1\\\\LoveApp\\\\loveapp\\\\src\\\\Components\\\\Love.js\";\nimport React from 'react';\nimport ShowDays from './ShowDays';\nimport Moment from 'moment';\nconst meet = Moment(\"02/06/2019\", \"MM/DD/YYYY\");\nconsole.log(meet);\nconst time1 = Moment();\nconsole.log(time1);\nconsole.log(time1.diff(meet, 'days') + 1);\n\nDate.getFormattedDateDiff = function (date1, date2) {\n  var b = Moment(date1),\n      a = Moment(date2),\n      intervals = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'],\n      out = [];\n\n  for (var i = 0; i < intervals.length; i++) {\n    var diff = a.diff(b, intervals[i]);\n    b.add(diff, intervals[i]);\n    out.push(diff);\n  }\n\n  return out;\n};\n\nconsole.log(Date.getFormattedDateDiff(meet, time1));\n\nclass Love extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString(),\n      total_days: 0,\n      years: 0,\n      months: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      second: 0\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ShowDays, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Love;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/react-1/LoveApp/loveapp/src/Components/Love.js"],"names":["React","ShowDays","Moment","meet","console","log","time1","diff","Date","getFormattedDateDiff","date1","date2","b","a","intervals","out","i","length","add","push","Love","Component","constructor","props","state","time","toLocaleString","total_days","years","months","days","hours","minutes","second","componentDidMount","intervalID","setInterval","tick","componentWillUnmount","clearInterval","setState","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAAC,YAAD,EAAc,YAAd,CAAnB;AACAE,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAMG,KAAK,GAAIJ,MAAM,EAArB;AACAE,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEAF,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,IAAN,CAAWJ,IAAX,EAAgB,MAAhB,IAAwB,CAApC;;AAEAK,IAAI,CAACC,oBAAL,GAA4B,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACjD,MAAIC,CAAC,GAAGV,MAAM,CAACQ,KAAD,CAAd;AAAA,MACIG,CAAC,GAAGX,MAAM,CAACS,KAAD,CADd;AAAA,MAEIG,SAAS,GAAG,CAAC,OAAD,EAAS,QAAT,EAAkB,OAAlB,EAA0B,MAA1B,EAAiC,OAAjC,EAAyC,SAAzC,EAAmD,SAAnD,CAFhB;AAAA,MAGIC,GAAG,GAAG,EAHV;;AAKA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,SAAS,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,QAAIT,IAAI,GAAGM,CAAC,CAACN,IAAF,CAAOK,CAAP,EAAUE,SAAS,CAACE,CAAD,CAAnB,CAAX;AACAJ,IAAAA,CAAC,CAACM,GAAF,CAAMX,IAAN,EAAYO,SAAS,CAACE,CAAD,CAArB;AACAD,IAAAA,GAAG,CAACI,IAAJ,CAASZ,IAAT;AACH;;AACD,SAAOQ,GAAP;AACD,CAZD;;AAcAX,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,oBAAL,CAA0BN,IAA1B,EAA+BG,KAA/B,CAAZ;;AAEA,MAAMc,IAAN,SAAmBpB,KAAK,CAACqB,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIjB,IAAJ,GAAWkB,cAAX,EADK;AAEXC,MAAAA,UAAU,EAAE,CAFD;AAGXC,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,MAAM,EAAE,CAJG;AAKXC,MAAAA,IAAI,EAAC,CALM;AAMXC,MAAAA,KAAK,EAAE,CANI;AAOXC,MAAAA,OAAO,EAAE,CAPE;AAQXC,MAAAA,MAAM,EAAE;AARG,KAAb;AAUD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAC3B,MAAM,KAAKC,IAAL,EADqB,EAE3B,IAF2B,CAA7B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKG,QAAL,CAAc;AACZf,MAAAA,IAAI,EAAE,IAAIjB,IAAJ,GAAWkB,cAAX;AADM,KAAd;AAGD;;AACCe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AArC6B;;AAwClC,eAAerB,IAAf","sourcesContent":["import React from 'react'\r\nimport ShowDays from './ShowDays'\r\nimport Moment from 'moment'\r\n\r\nconst meet = Moment(\"02/06/2019\",\"MM/DD/YYYY\")\r\nconsole.log(meet)\r\nconst time1 =  Moment();\r\nconsole.log(time1)\r\n\r\nconsole.log(time1.diff(meet,'days')+1)\r\n\r\nDate.getFormattedDateDiff = function(date1, date2) {\r\n  var b = Moment(date1),\r\n      a = Moment(date2),\r\n      intervals = ['years','months','weeks','days','hours','minutes','seconds'],\r\n      out = [];\r\n \r\n  for(var i=0; i<intervals.length; i++){\r\n      var diff = a.diff(b, intervals[i]);\r\n      b.add(diff, intervals[i]);\r\n      out.push(diff);\r\n  }\r\n  return out;\r\n};\r\n\r\nconsole.log(Date.getFormattedDateDiff(meet,time1))\r\n\r\nclass Love extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: new Date().toLocaleString(),\r\n      total_days: 0,\r\n      years: 0,\r\n      months: 0,\r\n      days:0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      second: 0,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.intervalID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: new Date().toLocaleString()\r\n    });\r\n  }\r\n    render(){\r\n        return(\r\n            <>\r\n                <ShowDays></ShowDays>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Love;"]},"metadata":{},"sourceType":"module"}